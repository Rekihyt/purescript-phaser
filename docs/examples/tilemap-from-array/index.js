// Generated by purs bundle 0.14.4
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var apply = function (dict) {
      return dict.apply;
  };
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];          
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var bind = function (dict) {
      return dict.bind;
  };
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["ap"] = ap;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  exports["length"] = $foreign.length;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["void"] = $$void;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  exports["null"] = $foreign["null"];
  exports["notNull"] = $foreign.notNull;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];                   
  var showString = {
      show: $foreign.showStringImpl
  };
  var showInt = {
      show: $foreign.showIntImpl
  };
  var show = function (dict) {
      return dict.show;
  };
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function(exports) {
  "use strict";

  exports.runEffectFn2 = function runEffectFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  exports.runEffectFn3 = function runEffectFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["runEffectFn2"] = $foreign.runEffectFn2;
  exports["runEffectFn3"] = $foreign.runEffectFn3;
})(PS);
(function(exports) {
  'use strict';

  function create() {
    return new Phaser.Game();
  }

  exports.create = create;

  exports.setGameDimensionsImpl = function ({ width, height }, game) {
    game.config.width = width;
    game.config.height = height;
    return game;
  };

  exports.addSceneImpl = function (
    { key, init, create, update, preload, state },
    autoStart,
    game
  ) {
    const config = {
      init: function (data_) {
        init(this)(data_)();
      },
      preload: function () {
        preload(this)();
      },
      create: function (data_) {
        create(this)(data_)();
      },
      update: function () {
        update(this)();
      },
    };
    game.scene.add(key, config, autoStart, state);
    return game;
  };
})(PS["Graphics.Phaser"] = PS["Graphics.Phaser"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser"] = $PS["Graphics.Phaser"] || {};
  var exports = $PS["Graphics.Phaser"];
  var $foreign = $PS["Graphics.Phaser"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                
  var setGameDimensions = Effect_Uncurried.runEffectFn2($foreign.setGameDimensionsImpl);
  var addScene = Effect_Uncurried.runEffectFn3($foreign.addSceneImpl);
  exports["setGameDimensions"] = setGameDimensions;
  exports["addScene"] = addScene;
  exports["create"] = $foreign.create;
})(PS);
(function(exports) {
  "use strict";

  exports.loadImagesImpl = (images, scene) => {
    images.forEach(({ key, path }) => {
      scene.load.image(key, path);
    });
    return scene;
  };
})(PS["Graphics.Phaser.Loader"] = PS["Graphics.Phaser.Loader"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.Loader"] = $PS["Graphics.Phaser.Loader"] || {};
  var exports = $PS["Graphics.Phaser.Loader"];
  var $foreign = $PS["Graphics.Phaser.Loader"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                         
  var loadImages = Effect_Uncurried.runEffectFn2($foreign.loadImagesImpl);
  exports["loadImages"] = loadImages;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.Scene"] = $PS["Graphics.Phaser.Scene"] || {};
  var exports = $PS["Graphics.Phaser.Scene"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var defaultSceneConfig = {
      key: "",
      create: function (_scene) {
          return function (_state) {
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      },
      init: function (_scene) {
          return function (_state) {
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      },
      update: function (_scene) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      },
      preload: function (_scene) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      },
      state: {}
  };
  exports["defaultSceneConfig"] = defaultSceneConfig;
})(PS);
(function(exports) {
  "use strict";

  exports.makeTileMapImpl = (scene, { key, data, tileWidth, tileHeight }) =>
    scene.make.tilemap({ key, data, tileWidth, tileHeight });

  exports.addTilesetImageImpl = function (
    tileMap,
    tilesetName,
    { key, tileWidth, tileHeight, tileMargin, tileSpacing, gid }
  ) {
    return tileMap.addTilesetImage(
      tilesetName,
      key,
      tileWidth,
      tileHeight,
      tileMargin,
      tileSpacing,
      gid
    );
  };

  exports.createLayerImpl = (tileMap, layerID, tileset) =>
    tileMap.createLayer(layerID, tileset);

  exports.tilesets = (tileMap) => tileMap.tilesets;
})(PS["Graphics.Phaser.TileMap"] = PS["Graphics.Phaser.TileMap"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.TileMap"] = $PS["Graphics.Phaser.TileMap"] || {};
  var exports = $PS["Graphics.Phaser.TileMap"];
  var $foreign = $PS["Graphics.Phaser.TileMap"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                
  var makeTileMap = Effect_Uncurried.runEffectFn2($foreign.makeTileMapImpl);
  var defaultTilesetDesc = {
      key: Data_Nullable["null"],
      tileWidth: Data_Nullable["null"],
      tileHeight: Data_Nullable["null"],
      tileMargin: Data_Nullable["null"],
      tileSpacing: Data_Nullable["null"],
      gid: Data_Nullable["null"]
  };
  var createLayer = function (dictShow) {
      return Effect_Uncurried.runEffectFn3($foreign.createLayerImpl);
  };
  var addTilesetImage = Effect_Uncurried.runEffectFn3($foreign.addTilesetImageImpl);
  exports["makeTileMap"] = makeTileMap;
  exports["defaultTilesetDesc"] = defaultTilesetDesc;
  exports["createLayer"] = createLayer;
  exports["addTilesetImage"] = addTilesetImage;
  exports["tilesets"] = $foreign.tilesets;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Graphics_Phaser = $PS["Graphics.Phaser"];
  var Graphics_Phaser_Loader = $PS["Graphics.Phaser.Loader"];
  var Graphics_Phaser_Scene = $PS["Graphics.Phaser.Scene"];
  var Graphics_Phaser_TileMap = $PS["Graphics.Phaser.TileMap"];                
  var tileName = "mario-tiles";
  var tileMapKey = "tile map 1";
  var mainSceneKey = "main";
  var create = function (scene) {
      return function (_state) {
          var level = [ [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 1, 2, 3, 0, 0, 0, 1, 2, 3, 0 ], [ 0, 5, 6, 7, 0, 0, 0, 5, 6, 7, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 14, 13, 14, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 14, 14, 14, 14, 14, 0, 0, 0, 15 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15 ], [ 35, 36, 37, 0, 0, 0, 0, 0, 15, 15, 15 ], [ 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39 ] ];
          return function __do() {
              var tileMap = Graphics_Phaser_TileMap.makeTileMap(scene)({
                  key: tileMapKey,
                  data: level,
                  tileHeight: 16,
                  tileWidth: 16
              })();
              var tileset = Graphics_Phaser_TileMap.addTilesetImage(tileMap)(tileName)({
                  key: Graphics_Phaser_TileMap.defaultTilesetDesc.key,
                  tileWidth: Data_Nullable.notNull(16),
                  tileHeight: Data_Nullable.notNull(16),
                  tileMargin: Graphics_Phaser_TileMap.defaultTilesetDesc.tileMargin,
                  tileSpacing: Graphics_Phaser_TileMap.defaultTilesetDesc.tileSpacing,
                  gid: Graphics_Phaser_TileMap.defaultTilesetDesc.gid
              })();
              Effect_Console.log("Found " + (Data_Show.show(Data_Show.showInt)(Data_Array.length(Graphics_Phaser_TileMap.tilesets(tileMap))) + " tileset"))();
              var _layer = Graphics_Phaser_TileMap.createLayer(Data_Show.showString)(tileMap)("layer")([ tileset ])();
              return Data_Unit.unit;
          };
      };
  };
  var mainScene = {
      key: mainSceneKey,
      create: create,
      init: Graphics_Phaser_Scene.defaultSceneConfig.init,
      update: Graphics_Phaser_Scene.defaultSceneConfig.update,
      preload: Graphics_Phaser_Loader.loadImages([ {
          key: tileName,
          path: "assets/super-mario.png"
      } ]),
      state: Graphics_Phaser_Scene.defaultSceneConfig.state
  };
  var main = Data_Functor["void"](Effect.functorEffect)(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Graphics_Phaser.create)(Graphics_Phaser.setGameDimensions({
      width: 200.0,
      height: 200.0
  })))(Graphics_Phaser.addScene(mainScene)(true)));
  exports["tileName"] = tileName;
  exports["tileMapKey"] = tileMapKey;
  exports["mainSceneKey"] = mainSceneKey;
  exports["main"] = main;
  exports["mainScene"] = mainScene;
  exports["create"] = create;
})(PS);
PS["Main"].main();