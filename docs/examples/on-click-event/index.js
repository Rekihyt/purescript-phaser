// Generated by purs bundle 0.14.4
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var apply = function (dict) {
      return dict.apply;
  };
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];          
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var bind = function (dict) {
      return dict.bind;
  };
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["void"] = $$void;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.runEffectFn2 = function runEffectFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["runEffectFn2"] = $foreign.runEffectFn2;
})(PS);
(function(exports) {
  "use strict";

  function create() {
    return new Phaser.Game();
  }

  exports.create = create;

  exports.setGameDimensionsImpl = function ({ width, height }, game) {
    game.config.width = width;
    game.config.height = height;
    return game;
  };
})(PS["Graphics.Phaser"] = PS["Graphics.Phaser"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser"] = $PS["Graphics.Phaser"] || {};
  var exports = $PS["Graphics.Phaser"];
  var $foreign = $PS["Graphics.Phaser"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                
  var setGameDimensions = Effect_Uncurried.runEffectFn2($foreign.setGameDimensionsImpl);
  exports["setGameDimensions"] = setGameDimensions;
  exports["create"] = $foreign.create;
})(PS);
(function(exports) {
  'use strict';

  exports.destroyImpl = function (obj) {
    obj.destroy();
    return {};
  };

  exports.getPositionImpl = function ({ x, y }) {
    return { x, y };
  };
  exports.setPositionImpl = function ({ x, y }, obj) {
    obj.setPosition(x, y);
    return obj;
  };
  exports.getAngleImpl = function (obj) {
    return obj.angle;
  };
  exports.setAngleImpl = function (degrees, obj) {
    obj.setAngle(degrees);
    return obj;
  };
  exports.getRadiansImpl = function (obj) {
    return obj.radians;
  };
  exports.setRadiansImpl = function (radians, obj) {
    obj.setRadians(radians);
    return obj;
  };
  exports.getVisibleImpl = function (obj) {
    return obj.visible;
  };
  exports.setVisibleImpl = function (visible, obj) {
    obj.setVisible(visible);
    return obj;
  };

  exports.getAlphaImpl = function (obj) {
    return obj.alpha;
  };
  exports.setAlphaImpl = function (value, obj) {
    obj.setAlpha(value);
    return obj;
  };

  exports.setTintImpl = function (value, obj) {
    obj.setTint(value);
    return obj;
  };
  exports.clearTintImpl = function (obj) {
    obj.clearTint();
    return obj;
  };

  exports.getSizeImpl = function ({ width, height }) {
    return { width, height };
  };
  exports.setSizeImpl = function ({ width, height }, obj) {
    obj.setSize(width, height);
    return obj;
  };

  exports.getDisplaySizeImpl = function ({ displayWidth, displayHeight }) {
    return { width: displayWidth, height: displayHeight };
  };
  exports.setDisplaySizeImpl = ({ width, height }, obj) => {
    obj.setDisplaySize(width, height);
    return obj;
  };

  exports.getOriginImpl = ({ originX, originY }) => ({ x: originX, y: originY });

  exports.setOriginImpl = ({ x, y }, obj) => {
    obj.setOrigin(x, y);
    return obj;
  };

  exports.getScaleImpl = ({ scaleX, scaleY }) => ({ x: scaleX, y: scaleY });

  exports.setScaleImpl = function ({ x, y }, obj) {
    obj.setScale(x, y);
    return obj;
  };

  exports.getNameImpl = ({ name }) => name;
  exports.setNameImpl = (name, obj) => {
    obj.setName(name);
    return obj;
  };

  exports.onClickImpl = (handler, obj) => {
    obj.
       setInteractive()
      .on('pointerdown', (pointer, localX, localY, event) =>
        handler(pointer)({ x: localX, y: localY })(event)(obj)()
      );
    return obj;
  };

  exports.getSceneImpl = (obj) => obj.scene;
})(PS["Graphics.Phaser.GameObject"] = PS["Graphics.Phaser.GameObject"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.GameObject"] = $PS["Graphics.Phaser.GameObject"] || {};
  var exports = $PS["Graphics.Phaser.GameObject"];
  var $foreign = $PS["Graphics.Phaser.GameObject"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var setPosition = function (dict) {
      return dict.setPosition;
  };
  var setDisplaySize = function (dict) {
      return dict.setDisplaySize;
  };
  var onClick = function (dict) {
      return dict.onClick;
  };
  var imageInstance = {
      destroy: function (i) {
          return function () {
              return $foreign.destroyImpl(i);
          };
      },
      getPosition: function (i) {
          return function () {
              return $foreign.getPositionImpl(i);
          };
      },
      setPosition: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setPositionImpl)(i);
      },
      getAngle: function (i) {
          return function () {
              return $foreign.getAngleImpl(i);
          };
      },
      setAngle: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setAngleImpl)(i);
      },
      getRadians: function (i) {
          return function () {
              return $foreign.getRadiansImpl(i);
          };
      },
      setRadians: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setRadiansImpl)(i);
      },
      getVisible: function (i) {
          return function () {
              return $foreign.getVisibleImpl(i);
          };
      },
      setVisible: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setVisibleImpl)(i);
      },
      getAlpha: function (i) {
          return function () {
              return $foreign.getAlphaImpl(i);
          };
      },
      setAlpha: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setAlphaImpl)(i);
      },
      getOrigin: function (i) {
          return function () {
              return $foreign.getOriginImpl(i);
          };
      },
      setOrigin: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setOriginImpl)(i);
      },
      clearTint: function (i) {
          return function () {
              return $foreign.clearTintImpl(i);
          };
      },
      setTint: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setTintImpl)(i);
      },
      getSize: function (i) {
          return function () {
              return $foreign.getSizeImpl(i);
          };
      },
      setSize: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setSizeImpl)(i);
      },
      getDisplaySize: function (i) {
          return function () {
              return $foreign.getDisplaySizeImpl(i);
          };
      },
      setDisplaySize: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setDisplaySizeImpl)(i);
      },
      getScale: function (i) {
          return function () {
              return $foreign.getScaleImpl(i);
          };
      },
      setScale: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setScaleImpl)(i);
      },
      getName: function (i) {
          return function () {
              return $foreign.getNameImpl(i);
          };
      },
      setName: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.setNameImpl)(i);
      },
      onClick: function (i) {
          return Effect_Uncurried.runEffectFn2($foreign.onClickImpl)(i);
      },
      getScene: $foreign.getSceneImpl
  };
  exports["onClick"] = onClick;
  exports["setPosition"] = setPosition;
  exports["setDisplaySize"] = setDisplaySize;
  exports["imageInstance"] = imageInstance;
})(PS);
(function(exports) {
  'use strict';

  exports.createImpl = (textureKey, scene) => scene.add.image(0, 0, textureKey);
})(PS["Graphics.Phaser.Image"] = PS["Graphics.Phaser.Image"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.Image"] = $PS["Graphics.Phaser.Image"] || {};
  var exports = $PS["Graphics.Phaser.Image"];
  var $foreign = $PS["Graphics.Phaser.Image"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                
  var create = Effect_Uncurried.runEffectFn2($foreign.createImpl);
  exports["create"] = create;
})(PS);
(function(exports) {
  "use strict";

  exports.loadImagesImpl = (images, scene) => {
    images.forEach(({ key, path }) => {
      scene.load.image(key, path);
    });
    return scene;
  };
})(PS["Graphics.Phaser.Loader"] = PS["Graphics.Phaser.Loader"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.Loader"] = $PS["Graphics.Phaser.Loader"] || {};
  var exports = $PS["Graphics.Phaser.Loader"];
  var $foreign = $PS["Graphics.Phaser.Loader"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                         
  var loadImages = Effect_Uncurried.runEffectFn2($foreign.loadImagesImpl);
  exports["loadImages"] = loadImages;
})(PS);
(function(exports) {
  "use strict";

  exports.addSceneImpl = function (
    { key, init, create, update, preload, autoStart },
    game
  ) {
    const config = {
      init: function () {
        init(this)();
      },
      preload: function () {
        preload(this)();
      },
      create: function () {
        create(this)();
      },
      update: function () {
        update(this)();
      },
    };
    game.scene.add(key, config, autoStart);
    return game;
  };
})(PS["Graphics.Phaser.Scene"] = PS["Graphics.Phaser.Scene"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.Scene"] = $PS["Graphics.Phaser.Scene"] || {};
  var exports = $PS["Graphics.Phaser.Scene"];
  var $foreign = $PS["Graphics.Phaser.Scene"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var defaultSceneConfig = {
      key: "",
      autoStart: false,
      create: function (_scene) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      },
      init: function (_scene) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      },
      update: function (_scene) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      },
      preload: function (_scene) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      }
  };                                                                      
  var addScene = Effect_Uncurried.runEffectFn2($foreign.addSceneImpl);
  exports["defaultSceneConfig"] = defaultSceneConfig;
  exports["addScene"] = addScene;
})(PS);
(function(exports) {
  'use strict';

  exports.createImpl = function (text, scene) {
    return scene.add.text(0, 0, text);
  };
})(PS["Graphics.Phaser.Text"] = PS["Graphics.Phaser.Text"] || {});
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Graphics.Phaser.Text"] = $PS["Graphics.Phaser.Text"] || {};
  var exports = $PS["Graphics.Phaser.Text"];
  var $foreign = $PS["Graphics.Phaser.Text"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];                     
  var create = Effect_Uncurried.runEffectFn2($foreign.createImpl);
  exports["create"] = create;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.4
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Graphics_Phaser = $PS["Graphics.Phaser"];
  var Graphics_Phaser_GameObject = $PS["Graphics.Phaser.GameObject"];
  var Graphics_Phaser_Image = $PS["Graphics.Phaser.Image"];
  var Graphics_Phaser_Loader = $PS["Graphics.Phaser.Loader"];
  var Graphics_Phaser_Scene = $PS["Graphics.Phaser.Scene"];
  var Graphics_Phaser_Text = $PS["Graphics.Phaser.Text"];                
  var mainScene = (function () {
      var startButton = function (scene) {
          var callback = function (_vec1) {
              return function (_vec2) {
                  return function (_event) {
                      return function (_image) {
                          return function __do() {
                              Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Graphics_Phaser_Image.create("logo")(scene))(Graphics_Phaser_GameObject.setPosition(Graphics_Phaser_GameObject.imageInstance)({
                                  x: 200.0,
                                  y: 200.0
                              })))(Graphics_Phaser_GameObject.setDisplaySize(Graphics_Phaser_GameObject.imageInstance)({
                                  width: 150.0,
                                  height: 150.0
                              }))();
                              return Data_Unit.unit;
                          };
                      };
                  };
              };
          };
          return function __do() {
              var image = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Graphics_Phaser_Image.create("logo")(scene))(Graphics_Phaser_GameObject.setPosition(Graphics_Phaser_GameObject.imageInstance)({
                  x: 100.0,
                  y: 100.0
              })))(Graphics_Phaser_GameObject.setDisplaySize(Graphics_Phaser_GameObject.imageInstance)({
                  width: 50.0,
                  height: 50.0
              }))();
              Graphics_Phaser_GameObject.onClick(Graphics_Phaser_GameObject.imageInstance)(callback)(image)();
              return scene;
          };
      };
      return {
          key: "main",
          autoStart: true,
          create: function (scene) {
              return Data_Functor["void"](Effect.functorEffect)(function __do() {
                  Graphics_Phaser_Text.create("Click the logo to trigger an event")(scene)();
                  return startButton(scene)();
              });
          },
          init: Graphics_Phaser_Scene.defaultSceneConfig.init,
          update: Graphics_Phaser_Scene.defaultSceneConfig.update,
          preload: Graphics_Phaser_Loader.loadImages([ {
              key: "logo",
              path: "https://upload.wikimedia.org/wikipedia/commons/6/64/PureScript_Logo.png"
          } ])
      };
  })();
  var main = Data_Functor["void"](Effect.functorEffect)(Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Graphics_Phaser.create)(Graphics_Phaser.setGameDimensions({
      width: 400.0,
      height: 300.0
  })))(Graphics_Phaser_Scene.addScene(mainScene)));
  exports["main"] = main;
  exports["mainScene"] = mainScene;
})(PS);
PS["Main"].main();